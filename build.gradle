plugins {
    id 'java'
    id "io.papermc.paperweight.userdev" version "2.0.0-beta.16"
}

group = 'me.axeno'
version = '0.0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url "https://maven.enginehub.org/repo/"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
}

dependencies {
    paperweight.paperDevBundle '1.21.5-R0.1-SNAPSHOT'
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")

    implementation 'org.jetbrains:annotations:24.1.0'
    implementation 'com.github.Revxrsal.Lamp:common:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.2.1'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

//tasks {
//    runServer {
//        minecraftVersion("1.21")
//    }
//}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
